# -*- coding: utf-8 -*-
"""finalreport1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dur-JMdbVCmEeSanb1OvgTGajMun8PpE
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/finalreport

import numpy as np

f = open('dat1.txt', 'r')
data1 = f.read().split("\n")
n1 = len(data1)
for i in range(n1):
  data1[i] = float(data1[i])
f.close()

a = 0
for i in range(n1):
  a += data1[i]
for i in range(n1):
  data1[i] -= a/n1

f = open('dat2.txt', 'r')
data2 = f.read().split("\n")
n2 = len(data2)
for i in range(n2):
  data2[i] = float(data2[i])
f.close()

b = 0
for i in range(n2):
  b += data2[i]
for i in range(n2):
  data2[i] -= b/n2

data = np.zeros((n1,2))
for i in range(n1):
  data[i][0] = data1[i]
  data[i][1] = data2[i]

cov_matrix = np.cov(data1,data2)
eigenvalues, unique_matrix = np.linalg.eig(cov_matrix)
matrix_D = [[eigenvalues[0]**(-0.5),0],[0,eigenvalues[1]**(-0.5)]]
matrix_V = unique_matrix @ matrix_D @ unique_matrix.T
z = np.zeros((n1,2))
for i in range(n1):
  z[i] = matrix_V @ data[i]

def regularize(w): #正規化をおこなう
  n = len(w)
  sum = 0
  for i in range(n):
    sum += w[i]**2
  for i in range(n):
    w[i] *= sum**(-0.5)
  return w

import copy

w1 = [1,1]
w2 = [-1,1]

w1 = regularize(w1)
w2 = regularize(w2)
pastw1 = copy.copy(w1)  
pastw2 = copy.copy(w2) #収束確認用に前のwをコピーしておく

diff = 1 #収束確認用
while diff >= 0.0000001:
  diff = 0
  sumE1_0 = 0
  sumE1_1 = 0
  for i in range(n1):
    sumE1_0 += (z[i][0] * np.inner(w1,z[i])**3)
    sumE1_1 += (z[i][1] * np.inner(w1,z[i])**3)
  E1 = [sumE1_0 / n1, sumE1_1 / n1]
  w1[0] = E1[0] - w1[0]*3
  w1[1] = E1[1] - w1[1]*3
  w1 = regularize(w1)
  for i in range(2):
    diff += abs(abs(pastw1[i])-abs(w1[i]))
  #1つ前のwからの変化量の合計、これが十分小さければ収束したと判断する
  pastw1 = copy.copy(w1)
  

diff = 1
while diff >= 0.0000001:
  diff = 0
  sumE2_0 = 0
  sumE2_1 = 0
  for i in range(n1):
    sumE2_0 += (z[i][0] * np.inner(w2,z[i])**3)
    sumE2_1 += (z[i][1] * np.inner(w2,z[i])**3)
  E2 = [sumE2_0 / n1, sumE2_1 / n1]
  w2[0] = E2[0] - w2[0]*3
  w2[1] = E2[1] - w2[1]*3
  w2 = regularize(w2)
  for i in range(2):
    diff += abs(abs(pastw2[i])-abs(w2[i]))
  pastw2 = copy.copy(w2)

W = [[w1[0],w1[1]],[w2[0],w2[1]]]

import matplotlib.pyplot as plt

y = np.zeros((n1,2))
for i in range(n1):
  y[i] = W @ z[i]

y1 = []
y2 = []
for i in range(n1):
  y1.append(y[i][0])
  y2.append(y[i][1])

plt.plot(y1)
plt.figure()
plt.plot(y2)
